/* format for gigabytes */
"%0.1f GB" = "%0.1f GB";

/* format for kilobytes */
"%0.1f KB" = "%0.1f KB";

/* format for megabytes */
"%0.1f MB" = "%0.1f MB";

/* format for petabytes */
"%0.1f PB" = "%0.1f PB";

/* format for terabytes */
"%0.1f TB" = "%0.1f TB";

/* SysEx length format string
   Invalid message length format string */
"%@ bytes" = "%@ bytes";

/* format for < 1024 bytes */
"%d bytes" = "%d bytes";

/* zero timestamp formatted as clock time */
"*** ZERO ***" = "*** ZERO ***";

/* string for 1 byte */
"1 byte" = "1 byte";

/* displayed type of Active Sense event */
"Active Sense" = "Active Sense";

/* displayed type of Aftertouch (poly pressure) event */
"Aftertouch" = "Aftertouch";

/* exception if someone tries to set a property on an endpoint we don't own */
"Can't set a property on an endpoint we don't own" = "Can't set a property on an endpoint we don't own";

/* displayed type of Channel Pressure (aftertouch) event */
"Channel Pressure" = "Channel Pressure";

/* displayed type of Clock event */
"Clock" = "Clock";

/* displayed type of Continue event */
"Continue" = "Continue";

/* displayed type of Control event */
"Control" = "Control";

/* format of unknown controller */
"Controller %u" = "Controller %u";

/* exception with OSStatus if MIDIInputPortCreate() fails */
"Couldn't create a MIDI input port (error %ld)" = "Couldn't create a MIDI input port (error %ld)";

/* exception with OSStatus if MIDIOutputPortCreate() fails */
"Couldn't create a MIDI output port (error %ld)" = "Couldn't create a MIDI output port (error %ld)";

/* exception with property and OSStatus if getting object's property fails */
"Couldn't get object's property '%@' (error %ld)" = "Couldn't get object's property '%1$@' (error %2$ld)";

/* exception with property, SInt32, and OSStatus if setting object's property fails */
"Couldn't set object's property '%@' to %ld (error %ld)" = "Couldn't set object's property '%1$@' to %2$ld (error %3$ld)";

/* exception with property, value string, and OSStatus if setting object's property fails */
"Couldn't set object's property '%@' to '%@' (error %ld)" = "Couldn't set object's property '%1$@' to '%2$@' (error %3$ld)";

/* exception with OSStatus if setting endpoint's owner PID fails */
"Couldn't set owner PID on endpoint: error %ld" = "Couldn't set owner PID on endpoint: error %ld";

/* exception if someone calls -setIsOwnedByThisProcess on a non-virtual endpoint */
"Endpoint is not virtual, so it can't be owned by this process" = "Endpoint is not virtual, so it can't be owned by this process";

/* displayed type of Invalid event */
"Invalid" = "Invalid";

/* displayed type of MTC Quarter Frame event */
"MTC Quarter Frame" = "MTC Quarter Frame";

/* displayed type of Note Off event */
"Note Off" = "Note Off";

/* displayed type of Note On event */
"Note On" = "Note On";

/* displayed type of Pitch Wheel event */
"Pitch Wheel" = "Pitch Wheel";

/* displayed type of Program event */
"Program" = "Program";

/* displayed type of Reset event */
"Reset" = "Reset";

/* displayed type of Song Position Pointer event */
"Song Position Pointer" = "Song Position Pointer";

/* displayed type of Song Select event */
"Song Select" = "Song Select";

/* displayed type of Start event */
"Start" = "Start";

/* displayed type of Stop event */
"Stop" = "Stop";

/* displayed type of System Exclusive event */
"SysEx" = "SysEx";

/* displayed type of Tune Request event */
"Tune Request" = "Tune Request";

/* name of missing endpoint if not specified in document
   displayed type of unknown MIDI status byte */
"Unknown" = "Unknown";

/* unknown manufacturer name */
"Unknown Manufacturer" = "Unknown Manufacturer";
